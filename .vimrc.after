let &t_Co=256
colorscheme macvim
let NERDTreeWinPos = "right"
let g:indent_guides_enable_on_vim_startup = 0
let g:ruby_debugger_progname = 'mvim'
let g:Powerline_symbols = 'fancy'

let g:slime_target = "tmux"

" godef
let g:godef_split=2 
let g:godef_same_file_in_same_window=1

"gist
let g:gist_post_private = 1
let g:gist_open_browser_after_post = 1
let g:gist_show_privates = 1

"ruby autocomplete
"autocmd FileType ruby,eruby let g:rubycomplete_buffer_loading = 1 
"autocmd FileType ruby,eruby let g:rubycomplete_classes_in_global = 1
"autocmd FileType ruby,eruby let g:rubycomplete_rails = 1


"ruby tabs to spaces
autocmd Filetype ruby setlocal ts=2 sts=2 sw=2

"eclim for ruby autocompletion with youcompleteme
"let g:EclimCompletionMethod = 'omnifunc'

set nocompatible      " We're running Vim, not Vi!
inoremap jj <ESC>
"inoremap <C-c> <C-o>A
set autoindent
set wrap
set expandtab
set smartindent
set tabstop=2

" autosave buffers
autocmd BufLeave,FocusLost * silent! wall

"Youcompleteme
let g:ycm_semantic_triggers =  {
            \   'c' : ['->', '.'],
            \   'objc' : ['->', '.'],
            \   'ocaml' : ['.', '#'],
            \   'cpp,objcpp' : ['->', '.', '::'],
            \   'perl' : ['->'],
            \   'php' : ['->', '::'],
            \   'cs,java,javascript,d,vim,python,perl6,scala,vb,elixir,go' : ['.'],
            \   'ruby' : ['.', '::'],
            \   'lua' : ['.', ':'],
            \   'erlang' : [':'],
            \ }
syntax on
filetype plugin indent on     " required!
filetype plugin on


" ag / the silver searcher 
let g:agprg="ag -i --column"

" Ruby format on save
"au FileType ruby au BufWritePre <buffer> execute 'normal! gg=G' 


" ultisnips / YouCompleteMe intercompatibility
function! g:UltiSnips_Complete()
    call UltiSnips#ExpandSnippet()
    if g:ulti_expand_res == 0
        if pumvisible()
            return "\<C-n>"
        else
            call UltiSnips#JumpForwards()
            if g:ulti_jump_forwards_res == 0
               return "\<TAB>"
            endif
        endif
    endif
    return ""
endfunction

au BufEnter * exec "inoremap <silent> " . g:UltiSnipsExpandTrigger . " <C-R>=g:UltiSnips_Complete()<cr>"
let g:UltiSnipsJumpForwardTrigger="<tab>"
let g:UltiSnipsListSnippets="<c-e>"
" this mapping Enter key to <C-y> to chose the current highlight item 
" and close the selection list, same as other IDEs.
" CONFLICT with some plugins like tpope/Endwise
inoremap <expr> <CR> pumvisible() ? "\<C-y>" : "\<C-g>u\<CR>"


